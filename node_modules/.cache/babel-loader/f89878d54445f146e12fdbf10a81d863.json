{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\86130\\\\Desktop\\\\react-advanced\\\\starter-project-react-github-search-users\\\\src\\\\context\\\\context.js\";\nimport React, { useState, useEffect } from \"react\";\nimport mockUser from \"./mockData.js/mockUser\";\nimport mockRepos from \"./mockData.js/mockRepos\";\nimport mockFollowers from \"./mockData.js/mockFollowers\";\nimport axios from \"axios\";\nconst rootUrl = \"https://api.github.com\";\nconst GithubContext = React.createContext();\n\nconst GithubProvider = ({\n  children\n}) => {\n  const [githubUser, setGithubUser] = useState(mockUser);\n  const [repos, setRepos] = useState(mockRepos);\n  const [followers, setFollowers] = useState(mockFollowers); // request loading\n\n  const [requests, setRequests] = useState(0);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState({\n    show: false,\n    message: \"\"\n  });\n\n  const searchGithubUser = async user => {\n    toggleError();\n    setIsLoading(true);\n    const response = await axios(`${rootUrl}/users/${user}`).catch(err => console.log(err));\n\n    if (response) {\n      setGithubUser(response.data);\n      const {\n        login,\n        followers_url\n      } = response.data;\n    } else {\n      toggleError(true, \"there is no user with that user name\");\n    }\n\n    checkRequests();\n    setIsLoading(false);\n  }; // check rate\n\n\n  const checkRequests = () => {\n    axios(`${rootUrl}/rate_limit`).then(({\n      data\n    }) => {\n      console.log(data);\n      let {\n        rate: {\n          remaining\n        }\n      } = data; // remaining = 0;\n\n      setRequests(remaining);\n\n      if (remaining === 0) {\n        toggleError(true, \"sorry,you have exceeded your hourly rate limit!\");\n      }\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n\n  function toggleError(show = false, msg = \"\") {\n    setError({\n      show,\n      msg\n    });\n  } // error\n\n\n  useEffect(checkRequests, []);\n  return /*#__PURE__*/React.createElement(GithubContext.Provider, {\n    value: {\n      githubUser,\n      repos,\n      followers,\n      requests,\n      error,\n      searchGithubUser,\n      isLoading\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 5\n    }\n  }, children);\n};\n\nexport { GithubProvider, GithubContext };","map":{"version":3,"sources":["C:/Users/86130/Desktop/react-advanced/starter-project-react-github-search-users/src/context/context.js"],"names":["React","useState","useEffect","mockUser","mockRepos","mockFollowers","axios","rootUrl","GithubContext","createContext","GithubProvider","children","githubUser","setGithubUser","repos","setRepos","followers","setFollowers","requests","setRequests","isLoading","setIsLoading","error","setError","show","message","searchGithubUser","user","toggleError","response","catch","err","console","log","data","login","followers_url","checkRequests","then","rate","remaining","msg"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport mockUser from \"./mockData.js/mockUser\";\r\nimport mockRepos from \"./mockData.js/mockRepos\";\r\nimport mockFollowers from \"./mockData.js/mockFollowers\";\r\nimport axios from \"axios\";\r\n\r\nconst rootUrl = \"https://api.github.com\";\r\n\r\nconst GithubContext = React.createContext();\r\n\r\nconst GithubProvider = ({ children }) => {\r\n  const [githubUser, setGithubUser] = useState(mockUser);\r\n  const [repos, setRepos] = useState(mockRepos);\r\n  const [followers, setFollowers] = useState(mockFollowers);\r\n  // request loading\r\n  const [requests, setRequests] = useState(0);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [error, setError] = useState({ show: false, message: \"\" });\r\n\r\n  const searchGithubUser = async (user) => {\r\n    toggleError();\r\n    setIsLoading(true);\r\n    const response = await axios(`${rootUrl}/users/${user}`).catch((err) =>\r\n      console.log(err)\r\n    );\r\n    if (response) {\r\n      setGithubUser(response.data);\r\n      const { login, followers_url } = response.data;\r\n    } else {\r\n      toggleError(true, \"there is no user with that user name\");\r\n    }\r\n    checkRequests();\r\n    setIsLoading(false);\r\n  };\r\n  // check rate\r\n  const checkRequests = () => {\r\n    axios(`${rootUrl}/rate_limit`)\r\n      .then(({ data }) => {\r\n        console.log(data);\r\n        let {\r\n          rate: { remaining },\r\n        } = data;\r\n        // remaining = 0;\r\n        setRequests(remaining);\r\n        if (remaining === 0) {\r\n          toggleError(true, \"sorry,you have exceeded your hourly rate limit!\");\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n  function toggleError(show = false, msg = \"\") {\r\n    setError({ show, msg });\r\n  }\r\n  // error\r\n  useEffect(checkRequests, []);\r\n  return (\r\n    <GithubContext.Provider\r\n      value={{\r\n        githubUser,\r\n        repos,\r\n        followers,\r\n        requests,\r\n        error,\r\n        searchGithubUser,\r\n        isLoading,\r\n      }}\r\n    >\r\n      {children}\r\n    </GithubContext.Provider>\r\n  );\r\n};\r\n\r\nexport { GithubProvider, GithubContext };\r\n"]},"metadata":{},"sourceType":"module"}